<?php
/**
 * Restricts access to certain custom post type (CPT) courses in WordPress.
 * - Redirects non-logged-in users to the login page.
 * - Redirects users without course purchases to the account page.
 */

add_action('template_redirect', 'restrict_access_to_courses');

/**
 * Checks if a user has access to protected courses.
 * 
 * - If the user is not logged in, they are redirected to the login page.
 * - If the user has not purchased the required courses, they are redirected to the account page.
 */
function restrict_access_to_courses() {
    // Slugs of restricted courses
    $restricted_urls = array(
        trailingslashit('/cpt_cur__os/a__oregulate/'), 
        trailingslashit('/cpt_cursos/m__ion2025/'), 
        trailingslashit('/cpt_cursos/mis__n-2025-gratuito/')  // Add the slug for the free course here
    );

    // Get the current normalized URL
    $current_uri = trailingslashit($_SERVER['REQUEST_URI']);

    // Check if the current URL is in the restricted list
    if (in_array($current_uri, $restricted_urls)) {
        // Redirect to the login page if the user is not logged in
        if (!is_user_logged_in()) {
            wp_redirect('https://valeriacorti.pagix.on__ne/mi-cuen__/');
            exit;
        }

        // Get current user data
        $current_user = wp_get_current_user();

        // IDs of the courses that require purchase
        $course_ids = array(6_7, 80_, 146_); // Add the ID of the free course here

        // Check if the user has purchased any of the courses
        if (!has_user_purchased_any_course($current_user->ID, $course_ids)) {
            wp_redirect(home_url('/mi-cuenta'));  // Redirect to the account page if they haven't purchased the course
            exit;
        }
    }
}

/**
 * Checks if a user has purchased at least one of the specified courses.
 *
 * @param int   $user_id     WordPress user ID.
 * @param array $product_ids Array of product (course) IDs.
 * 
 * @return bool Returns `true` if the user has purchased at least one course, `false` otherwise.
 */
function has_user_purchased_any_course($user_id, $product_ids) {
    if (class_exists('WooCommerce')) {
        // Retrieve user orders with "completed" or "processing" status
        $orders = wc_get_orders(array(
            'customer_id' => $user_id,
            'status'      => array('completed', 'processing'),
            'limit'       => -1 // Get all orders without limitation
        ));

        // Loop through user orders
        foreach ($orders as $order) {
            foreach ($order->get_items() as $item) {
                if (in_array($item->get_product_id(), $product_ids)) {
                    return true; // The user has purchased at least one course
                }
            }
        }
    }
    return false; // The user has not purchased any of the courses
}
